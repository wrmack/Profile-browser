//
//  EditProfileRouter.swift
//  Profile editor
//
//  Created by Warwick McNaughton on 11/02/19.
//  Copyright (c) 2019 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol EditProfileRoutingLogic {
    func navigateToAuthentication()
    func returnFromAuthenticationController()
    func showMasterViewController()
    func showMasterViewControllerAfterSelectingLink()
}

protocol EditProfileDataPassing {
    var dataStore: EditProfileDataStore? { get }
}

class EditProfileRouter: NSObject, EditProfileRoutingLogic, EditProfileDataPassing {
    weak var viewController: EditProfileViewController?
    var dataStore: EditProfileDataStore?
  
  // MARK: Routing
    // TODO: pass webid using data passing rather than injection
    func navigateToAuthentication() {
        let authenticationVC = AuthenticateWithProviderViewController(webId: (dataStore?.webid)!)
        viewController!.show(authenticationVC, sender: nil)
    }
    
    func returnFromAuthenticationController() {
        let navC = viewController!.parent! as! UINavigationController
        if navC.children.count > 1 {
            navC.popViewController(animated: true)
        }
    }

    func showMasterViewController() {
        viewController?.navigationController?.navigationController?.popToRootViewController(animated: true)
        let splitVC = (UIApplication.shared.delegate! as! AppDelegate).window!.rootViewController! as! UISplitViewController
        let showProfileNavC = splitVC.viewControllers[0]
        let showProfileVC = showProfileNavC.children[0] as! ShowProfileViewController
        showProfileVC.router!.returnFromEditing()
    }

    
    func showMasterViewControllerAfterSelectingLink() {
        viewController?.navigationController?.navigationController?.popToRootViewController(animated: true)
        let splitVC = (UIApplication.shared.delegate! as! AppDelegate).window!.rootViewController! as! UISplitViewController
        let showProfileNavC = splitVC.viewControllers[0]
        let showProfileVC = showProfileNavC.children[0] as! ShowProfileViewController
        var destination = showProfileVC.router?.dataStore
        passDataToShowProfile(source: dataStore!, destination: &destination!)
        showProfileVC.router!.returnAfterSelectingLink()
    }
    

  
  // MARK: Passing data
  
    func passDataToShowProfile(source: EditProfileDataStore, destination: inout ShowProfileDataStore) {
        destination.webid = source.webid
    }
    
}
